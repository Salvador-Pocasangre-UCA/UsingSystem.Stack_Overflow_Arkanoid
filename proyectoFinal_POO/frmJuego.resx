<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAADYCAYAAACdiluRAAAABGdBTUEAALGeYUxB9wAAACBjSFJNAACH
        EAAAjBIAAP1NAACBPgAAWesAARIPAAA85gAAGc66ySIyAAABJmlDQ1BBZG9iZSBSR0IgKDE5OTgpAAAo
        z2NgYDJwdHFyZRJgYMjNKykKcndSiIiMUmA/z8DGwMwABonJxQWOAQE+IHZefl4qAwb4do2BEURf1gWZ
        xUAa4EouKCoB0n+A2CgltTiZgYHRAMjOLi8pAIozzgGyRZKywewNIHZRSJAzkH0EyOZLh7CvgNhJEPYT
        ELsI6Akg+wtIfTqYzcQBNgfClgGxS1IrQPYyOOcXVBZlpmeUKBhaWloqOKbkJ6UqBFcWl6TmFit45iXn
        FxXkFyWWpKYA1ULcBwaCEIWgENMAarTQZKAyAMUDhPU5EBy+jGJnEGIIkFxaVAZlMjIZE+YjzJgjwcDg
        v5SBgeUPQsykl4FhgQ4DA/9UhJiaIQODgD4Dw745AMDGT/0ZOjZcAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAN0ElEQVR4Xu3dXail1X0G8IBQKBQC3pSCUCgtBAQhNFAI9EIoFUIDhoJXJYGAoKkatdqmfkyccTRm
        RkeDX+0kMrZS6yRaq4zW+po6fkTwI7bFGYm2Q0XoRdKSJmgJ7H32TM86dcrJ6aPOnDnvftda/i5+N8/V
        edf+83/23me/e3/s2LFjAMBHTAwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7F
        EADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwB
        gL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADo
        WwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7F
        EADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWwwBgL7FEADoWww/
        Co6+efjjixefOWvlyYc/s/Kde86f33PLtvntO26b3XzVPbOdl+0/ePDgJwHoQ9ntZceXXV92ftn9i5ee
        Oevov7z+8dQRHwUx7NXiub//9PxbN2+fXXPBE7Orzh9WHXs/qwMDQCfSnn/PUDqhdMPiuSc/nbqjVzHs
        yeIfDvzObM+1d689yB9S+uulAQKgTWnPB//bE6udsXj6sbNTp/Qkhq1bvPTsWfO9u3b+34OZH+gPlAYI
        gDalPf8h1vpjvnf39sXLz52ZuqZ1MWzV4pXnz1z7H/4mS3+9NEAAtCnt+ZMwlG5ZfP97n0jd06oYtmYr
        i/+4NEAAtCnt+U3o6olADFsyv3PnLWsPSn6wNi0NEABtSnv+FAzzu27ctXj7yGmpl1oRwxasPLD3ovIg
        vCc9QKckDRAAbUp7fgsMK/u/dUHqqBbEsGaL11751dl1Fz1aDn7DA7Gl0gAB0Ka057fIUDpp8cZrp6fO
        qlkMa7Vy4IHz1g47PwhbKg0QAG1Ke36LDStP/u1nUnfVKoY1mu+77epywBsOfDRpgABoU9rzIxhKV6UO
        q1EMazPWB/0+SBogANqU9vxIhtJZqctqE8OabPXtfScqDRAAbUp7fkRrtwumTqtJDGtRfpRn7SDzAY8q
        DRAAbUp7fmTD7KYr70vdVosY1mC2+08neeV/XBogANqU9vwSVP1OQAynNrtt2/Ef70kHuhRpgABoU9rz
        SzLMbvvq7anrphbDKc2/uXv72oHlg1yaNEAAtCnt+SUays8Np86bUgynsvLwfX9QDmrDwU0iDRAAbUp7
        fsmG0nGp+6YSwyksDr16RjmgDQc2mTRAALQp7fkJDIs3D1XzjYExnMJsxyUPh8OaTBogANqU9vwkbrzi
        /tSBU4jhss3vu+PK1YOp5tV/kQYIgDalPT+RoXRe6sJli+EyHX3jtdPLgWw4oMmlAQKgTWnPT2go3Zc6
        cZliuEyzPdfsDYczuTRAALQp7flJ7bn27tSJyxTDZVl56pFzVg+iulf/RRogANqU9vzEhsXBx89O3bgs
        MVyW2bYvPRYOpQppgABoU9rzk9vx5QdTNy5LDJeh5lf/RRogANqU9nwFhtKFqSOXIYbLUNttfxulAQKg
        TWnPV2HCdwFiOLbyf4/VC6/21X+RBgiANqU9X4lh8fzwW6krxxbDsdX6yf/10gAB0Ka056ux2ompK8cW
        w7GtXnDVr/6LNEAAtCnt+YoMqSvHFsMxrRx44LxysRsuvjppgABoU9rzFRlKN6bOHFMMxzTbedn+cPHV
        2bdvHwCdSHu+Kjdcvj915phiOJajR37wS6sXWv2r/yINEABtSnu+MsPRt4+clrpzLDEcy3v3/qcLr04a
        IADalPZ8bZZ9N0AMxzLfu3t7uugapQECoE1pz9dm2b8SGMOxzLZdWO1X/26UBgiANqU9X53rL13qlwLF
        cCs8P5ufufvdn23/3I/fefM3fvSTY589/PpbqxfYxP//izRAALQp7fkKDaUrS2eW7iwdWro0dexWiOGp
        +sJP3v3eL//wv46td/6zT6eLrVYaIADalPZ8jT7/wnM/151F6dTUtacqhpv12nzl9E/9x0//3x9f3PTI
        /nixtUoDBECb0p6v0Y4DD8UOLd1aOjZ172bFcLPer/yLB++9I15srdIAAdCmtOdr9Ff3/Vns0KJ07Mbe
        PRUx3IzPh7f91/unPdvixdYqDRAAbUp7vkYvfuP62KHHXfLT/344dfBmxPBklQ8ppD90vSM3XRkvtlZp
        gABoU9rzNSpdmTp0va36YGAMT9aud3+2M/2R6/37zsvixdYqDRAAbUp7vkalK1OHrlc6N3XxyYrhyTr3
        x++8mf7I9d659sJ4sbVKAwRAm9Ker9F/Xndx7ND1SuemLj5ZMTxZv/6j/Eeuly60ZmmAAGhT2vM1Ki+W
        U4euV74nYGMPb0YMT9aJPAHwDgAAU0l7vkYn8g5A6dyNPbwZMTxZJ/IvgHJR6WJrlQYIgDalPV+j13df
        FTt0var+BeBDgADULO35Gj1z59dih65X1YcAT+Q2wPKsJl1srdIAAdCmtOdrVL40L3XoelXdBlh82BcB
        lWc16WJrlQYIgDalPV+ju7/9F7FDj7u4ti8COu43P+CrgMvXG6aLrVUaIADalPZ8jd7vtwCK0rEbe/dU
        xHCzyg8VvN+TgHJR6WJrlQYIgDalPV+ji54eYoeWbq36x4COS/8OKD9xmC62VmmAAGhT2vM1OveVV36u
        O4utfNt/vRhuhfIhhfJJxXK7Qrln8fcOH35r9eKGjRdbqzRAALQp7fkKDb/7gzd+WDqzdGfp0K36wF8S
        w7HMtl34WLjgKqUBAqBNac9XZ/vFo7zSfz8xHMt87+7t8aIrlAYIgDalPV+blb/+84tSd44lhmNZeeqR
        c9JF1ygNEABtSnu+MsPin1/6tdSdY4nhWI6+feS0cpEbLrpKaYAAaFPa81W59oInUm+OKYZjmt1w+f54
        8ZVJAwRAm9Ker8l8361Xp84cUwzHtHLggfNWL7b6dwHSAAHQprTnKzIsXjz4ydSZY4rh2MrFbrj46qQB
        AqBNac9XZEhdObYYjm2255q94QCqkgYIgDalPV+L+V037kpdObYYju29uwGqfhcgDRAAbUp7vhLD4uDj
        Z6euHFsMl2G248sPhoOoRhogANqU9nwVdlyy1C//WS+Gy1D7uwBpgABoU9rzFRhKF6aOXIYYLsts25eq
        /WrgNEAAtCnt+cmtdmDqxmWJ4bKsPPHQZ1cPocp3AdIAAdCmtOcnNumr/yKGyzT7+p/cGw5mcmmAAGhT
        2vOT+vof35c6cZliuEzlu49XD6O6dwHSAAHQprTnJzQcPfzqGakTlymGyza/Z8+2ciAbDmhSaYAAaFPa
        8xMZpvja3ySGUyi3QoSDmsyll14KQCfSnp/EhLf9bRTDKSwOvXrG6uFU8y5AGiAA2pT2/ASGxeF//JXU
        gVOI4VRq+qGgNEAAtCnt+SUbSsel7ptKDKc0v+uGXeWgNhzc0qUBAqBNac8v0TC/c+ctqfOmFMOpzXZ/
        pdwaOOmTgDRAALQp7fklGWa7vnJv6rqpxbAGsxuvuH/t4PKBji4NEABtSnt+Caot/yKGtZjySUAaIADa
        lPb8yIbZjX90f+q2WsSwJrObr7pn7SDzAY8mDRAAbUp7fkRD6a7UaTWJYW1m37ju9rUDzQc9ijRAALQp
        7fmRVPmBvySGNZp/8+bt5WA3HPRo0gAB0Ka050cwzPfu2pk6rEYxrNXK4985txzwhgMfRRogANqU9vwW
        G1Ye//bvp+6qVQxrtnjz0OmzGy7fXw57w+FvqTRAALQp7fktMpRf9ivdlDqrZjFswcpD935x7eDzA3LK
        0gAB0Ka057fAsPLgvi+mjmpBDFuxeOtff2F267a7y4Ow4UE5ZWmAAGhT2vOnYCjdUzoodVMrYtiaxTN/
        99uzr/7ho2sPSn6wTloaIADalPb8Jgyz7Rc/vHjhu59KXdSaGLZq8d1Hz9mqzwekAQKgTWnPn4Rh9rUr
        7l8cfPzs1D2timHrFi8/d2a5FWPtQdvkk4E0QAC0Ke35D7HWH/N9t169ePWFT6SuaV0Me7J4+rGzZ3uu
        Pf45gRN+MpAGCIA2pT0fDLOdl+0vH+w7euj7Z6RO6UkMe1Wexa38zV9+YXbrhz8hSAMEQJvCnj/eAcPs
        lmv2lnv4j/7bG7+YuqNXMfyoOPr2kdMWLz971sqBB84rb/PM77j+lrXfHlh9Brg6MA8C0Iey48vt4ytP
        PXJO+Tfx0Qbv299qMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA
        +hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBv
        MQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZD
        AKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA
        +hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQA+hZDAKBvMQQAenbsY/8D
        MLZQBLwOPBkAAAAASUVORK5CYII=
</value>
  </data>
</root>